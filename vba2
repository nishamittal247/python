Option Explicit

Public dealerMode As String

Sub SetupDealerAnalysis()
    Dim ws As Worksheet
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets("DealerAnalysis")
    If ws Is Nothing Then
        Set ws = ThisWorkbook.Sheets.Add(After:=Sheets(Sheets.Count))
        ws.Name = "DealerAnalysis"
    Else
        ws.Cells.Clear
        Dim shp As Shape
        For Each shp In ws.Shapes
            shp.Delete
        Next shp
    End If
    On Error GoTo 0

    ' UI elements
    With ws
        .Range("B2").Value = "Dealer:"
        .Range("B2").Font.Bold = True
        .Range("B2").HorizontalAlignment = xlRight

        .Range("C2").ClearContents
        .Range("C2").Interior.Color = RGB(255, 255, 255)
        .Range("C2").Borders.LineStyle = xlContinuous
        .Range("C2").ColumnWidth = 15

        .Range("D2").Value = "="
        .Range("D2").Font.Bold = True
        .Range("D2").HorizontalAlignment = xlCenter
    End With

    ' Set initial chart mode
    dealerMode = "Quotes"

    ' Create toggle button in E2
    Dim btn As Shape
    Set btn = ws.Shapes.AddFormControl(Type:=xlButtonControl, _
        Left:=ws.Range("E2").Left, Top:=ws.Range("E2").Top, Width:=90, Height:=20)
    With btn
        .Name = "btnToggleDealer"
        .TextFrame.Characters.Text = "Show Trades"
        .OnAction = "ToggleDealerChart"
    End With

    ' Draw initial chart
    Call DrawDealerChart
End Sub

Sub ToggleDealerChart()
    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("DealerAnalysis")
    dealerMode = IIf(dealerMode = "Quotes", "Trades", "Quotes")
    ws.Shapes("btnToggleDealer").TextFrame.Characters.Text = _
        IIf(dealerMode = "Quotes", "Show Trades", "Show Quotes")
    Call DrawDealerChart
End Sub

Sub DrawDealerChart()
    Dim wsData As Worksheet: Set wsData = ThisWorkbook.Sheets("bot")
    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("DealerAnalysis")
    Dim dealerFilter As String: dealerFilter = LCase(Trim(ws.Range("C2").Value))

    Dim lastRow As Long: lastRow = wsData.Cells(wsData.Rows.Count, 2).End(xlUp).Row
    Dim brokerDict As Object: Set brokerDict = CreateObject("Scripting.Dictionary")

    Dim i As Long
    Dim broker As String, traded, ask, bid

    For i = 2 To lastRow
        broker = Trim(wsData.Cells(i, 2).Value)
        If dealerFilter <> "" And LCase(broker) <> dealerFilter Then GoTo SkipRow

        traded = wsData.Cells(i, 9).Value
        ask = wsData.Cells(i, 7).Value
        bid = wsData.Cells(i, 8).Value

        If Not brokerDict.exists(broker) Then brokerDict(broker) = 0

        If dealerMode = "Trades" Then
            If Not IsEmpty(traded) Then brokerDict(broker) = brokerDict(broker) + 1
        Else
            If (Not IsEmpty(ask) Or Not IsEmpty(bid)) And IsEmpty(traded) Then
                brokerDict(broker) = brokerDict(broker) + 1
            End If
        End If
SkipRow:
    Next i

    ' Output to Z:AA (hidden range)
    ws.Range("Z1:AA100").ClearContents
    ws.Range("Z1:AA1").Value = Array("Broker", dealerMode)
    i = 2
    Dim key
    For Each key In brokerDict.Keys
        ws.Cells(i, 26).Value = key         ' Z
        ws.Cells(i, 27).Value = brokerDict(key) ' AA
        i = i + 1
    Next key

    ' Draw or update chart
    Dim chartObj As ChartObject
    On Error Resume Next
    Set chartObj = ws.ChartObjects("DealerChart")
    On Error GoTo 0
    If chartObj Is Nothing Then
        Set chartObj = ws.ChartObjects.Add(Left:=100, Top:=80, Width:=500, Height:=300)
        chartObj.Name = "DealerChart"
    End If
    With chartObj.Chart
        .ChartType = xlColumnClustered
        .SetSourceData Source:=ws.Range("Z1:AA" & i - 1)
        .HasTitle = True
        .ChartTitle.Text = dealerMode & " per Broker" & _
            IIf(dealerFilter <> "", " (" & ws.Range("C2").Value & ")", "")
    End With
End Sub
