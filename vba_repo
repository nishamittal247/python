import xlwings as xw
import pandas as pd

def create_repo_comparison_debug():
    wb = xw.Book.caller()
    ws = wb.sheets['RepoComp']
    ws.clear()  # Clear sheet

    # --- Load bot (dealer quotes) ---
    bot_df = wb.sheets['bot'].range('A1').expand().options(pd.DataFrame, header=1).value
    bot_df.columns = [c.lower() for c in bot_df.columns]  # ensure lower case

    # --- Load internal repo markings ---
    internal_df = wb.sheets['internal_repo_markings'].range('A1').expand().options(pd.DataFrame, header=1).value
    internal_df.columns = [c.lower() for c in internal_df.columns]

    # Convert dates
    bot_df['date'] = pd.to_datetime(bot_df['date'])
    internal_df['date'] = pd.to_datetime(internal_df['date'])

    # Merge dealer quotes with internal financing
    merged_df = pd.merge(bot_df, internal_df, on=['date', 'ticker'], how='inner', suffixes=('', '_internal'))

    # Calculate difference and signal
    merged_df['diff_bps'] = merged_df['implied_financing'] - merged_df['markings']
    merged_df['signal'] = merged_df['diff_bps'].apply(lambda x: 'Cheap' if x < 0 else 'Expensive')

    # Create summary: avg dealer vs internal
    summary_df = merged_df.groupby(['date', 'ticker'], as_index=False).agg({
        'implied_financing': 'mean',
        'markings': 'first'
    })
    summary_df.rename(columns={'implied_financing': 'avg_dealer', 'markings': 'internal'}, inplace=True)

    # Dealer beat count (count of quotes cheaper than internal)
    beat_count_df = merged_df.groupby('ticker').apply(
        lambda x: (x['implied_financing'] < x['markings']).sum()
    ).reset_index(name='days_cheaper')

    # --- Write results to RepoComp ---
    ws.range('A1').value = "DEBUG: Merged Data"
    ws.range('A2').value = merged_df

    start_row = merged_df.shape[0] + 4
    ws.range(f"A{start_row}").value = "DEBUG: Avg Dealer vs Internal"
    ws.range(f"A{start_row + 1}").value = summary_df

    start_row2 = start_row + summary_df.shape[0] + 4
    ws.range(f"A{start_row2}").value = "DEBUG: Dealer Beat Count"
    ws.range(f"A{start_row2 + 1}").value = beat_count_df

    print("Merged DF:\n", merged_df.head())
    print("Summary DF:\n", summary_df.head())
    print("Beat Count DF:\n", beat_count_df.head())



import xlwings as xw
import pandas as pd

def prepare_repo_visuals():
    wb = xw.Book.caller()
    ws = wb.sheets['RepoComp']
    ws.clear()

    # Load your data
    df = wb.sheets['bot'].range('A1').expand().options(pd.DataFrame, header=1).value
    df.columns = [c.lower() for c in df.columns]

    # Heatmap data (pivot)
    heatmap_df = df.pivot_table(
        index=['date', 'ticker'],
        columns='room_name',
        values='implied_financing',
        aggfunc='mean'
    ).reset_index()

    # Add internal markings
    markings_df = df[['date', 'ticker', 'markings']].drop_duplicates()
    heatmap_df = pd.merge(heatmap_df, markings_df, on=['date', 'ticker'])

    # Avg dealer vs internal
    dealer_cols = [c for c in heatmap_df.columns if c not in ['date', 'ticker', 'markings']]
    heatmap_df['avg_dealer'] = heatmap_df[dealer_cols].mean(axis=1)
    linechart_df = heatmap_df[['date', 'ticker', 'markings', 'avg_dealer']]

    # Dealer beat count
    dealer_counts = {
        dealer: (df[df['room_name'] == dealer]['implied_financing'] < df[df['room_name'] == dealer]['markings']).sum()
        for dealer in df['room_name'].unique()
    }
    dealer_count_df = pd.DataFrame(list(dealer_counts.items()), columns=['Dealer', 'Days Cheaper'])

    # Write to RepoComp
    ws.range('A1').value = "Heatmap Data"
    ws.range('A2').value = heatmap_df

    start_row = heatmap_df.shape[0] + 4
    ws.range(f"A{start_row}").value = "Internal vs Avg Dealer"
    ws.range(f"A{start_row + 1}").value = linechart_df

    start_row2 = start_row + linechart_df.shape[0] + 4
    ws.range(f"A{start_row2}").value = "Dealer Beat Count"
    ws.range(f"A{start_row2 + 1}").value = dealer_count_df
