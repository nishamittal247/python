import xlwings as xw
import pandas as pd

def create_repo_comparison_debug():
    wb = xw.Book.caller()
    ws = wb.sheets['RepoComp']
    ws.clear()  # Clear sheet

    # --- Load bot (dealer quotes) ---
    bot_df = wb.sheets['bot'].range('A1').expand().options(pd.DataFrame, header=1).value
    bot_df.columns = [c.lower() for c in bot_df.columns]  # ensure lower case

    # --- Load internal repo markings ---
    internal_df = wb.sheets['internal_repo_markings'].range('A1').expand().options(pd.DataFrame, header=1).value
    internal_df.columns = [c.lower() for c in internal_df.columns]

    # Convert dates
    bot_df['date'] = pd.to_datetime(bot_df['date'])
    internal_df['date'] = pd.to_datetime(internal_df['date'])

    # Merge dealer quotes with internal financing
    merged_df = pd.merge(bot_df, internal_df, on=['date', 'ticker'], how='inner', suffixes=('', '_internal'))

    # Calculate difference and signal
    merged_df['diff_bps'] = merged_df['implied_financing'] - merged_df['markings']
    merged_df['signal'] = merged_df['diff_bps'].apply(lambda x: 'Cheap' if x < 0 else 'Expensive')

    # Create summary: avg dealer vs internal
    summary_df = merged_df.groupby(['date', 'ticker'], as_index=False).agg({
        'implied_financing': 'mean',
        'markings': 'first'
    })
    summary_df.rename(columns={'implied_financing': 'avg_dealer', 'markings': 'internal'}, inplace=True)

    # Dealer beat count (count of quotes cheaper than internal)
    beat_count_df = merged_df.groupby('ticker').apply(
        lambda x: (x['implied_financing'] < x['markings']).sum()
    ).reset_index(name='days_cheaper')

    # --- Write results to RepoComp ---
    ws.range('A1').value = "DEBUG: Merged Data"
    ws.range('A2').value = merged_df

    start_row = merged_df.shape[0] + 4
    ws.range(f"A{start_row}").value = "DEBUG: Avg Dealer vs Internal"
    ws.range(f"A{start_row + 1}").value = summary_df

    start_row2 = start_row + summary_df.shape[0] + 4
    ws.range(f"A{start_row2}").value = "DEBUG: Dealer Beat Count"
    ws.range(f"A{start_row2 + 1}").value = beat_count_df

    print("Merged DF:\n", merged_df.head())
    print("Summary DF:\n", summary_df.head())
    print("Beat Count DF:\n", beat_count_df.head())


Option Explicit

Sub RefreshRepoComp()
    ' Run Python to prepare tables
    Application.Run "xlwings.RunPython", "import dashboard_calc; dashboard_calc.prepare_repo_visuals()"
    
    ' Add charts and heatmap formatting
    CreateRepoChartsAndHeatmap
End Sub

Sub CreateRepoChartsAndHeatmap()
    Dim ws As Worksheet
    Set ws = Sheets("RepoComp")
    
    Dim co As ChartObject
    Dim avgStart As Long, avgEnd As Long
    Dim beatStart As Long, beatEnd As Long
    
    ' Clear old charts
    For Each co In ws.ChartObjects
        co.Delete
    Next co

    ' --- Detect sections ---
    avgStart = ws.Range("A:A").Find("Internal vs Avg Dealer", LookAt:=xlWhole).Row + 1
    avgEnd = ws.Range("A:A").Find("Dealer Beat Count", LookAt:=xlWhole).Row - 2
    beatStart = ws.Range("A:A").Find("Dealer Beat Count", LookAt:=xlWhole).Row + 1
    beatEnd = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' --- Line Chart ---
    Set co = ws.ChartObjects.Add(Left:=ws.Range("I2").Left, Top:=ws.Range("I2").Top, Width:=400, Height:=250)
    With co.Chart
        .ChartType = xlLineMarkers
        .SetSourceData Source:=ws.Range("A" & avgStart & ":D" & avgEnd)
        .HasTitle = True
        .ChartTitle.Text = "Internal vs Avg Dealer"
    End With

    ' --- Bar Chart ---
    Set co = ws.ChartObjects.Add(Left:=ws.Range("I20").Left, Top:=ws.Range("I20").Top, Width:=400, Height:=250)
    With co.Chart
        .ChartType = xlColumnClustered
        .SetSourceData Source:=ws.Range("A" & beatStart & ":B" & beatEnd)
        .HasTitle = True
        .ChartTitle.Text = "Dealer Beat Count"
    End With

    ' --- Conditional Formatting (Heatmap) ---
    Dim heatmapEnd As Long
    heatmapEnd = ws.Range("A:A").Find("Internal vs Avg Dealer", LookAt:=xlWhole).Row - 2
    Dim dealerCols As Range
    Set dealerCols = ws.Range("C2:F" & heatmapEnd) ' adjust if more dealer columns
    
    dealerCols.FormatConditions.Delete
    dealerCols.FormatConditions.Add xlExpression, Formula1:="=C2<$B2"
    dealerCols.FormatConditions(1).Interior.Color = RGB(144, 238, 144) ' Green
    dealerCols.FormatConditions.Add xlExpression, Formula1:="=C2>$B2"
    dealerCols.FormatConditions(2).Interior.Color = RGB(255, 182, 193) ' Red
End Sub
