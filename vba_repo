Option Explicit

'=============================
' Run Python and Get Repo Data
'=============================
Function RunPythonRepoComparison() As Variant
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim tempRange As Range
    
    Set wb = ThisWorkbook
    Set ws = wb.Sheets("RepoComp")
    
    ' Clear temporary range
    Set tempRange = ws.Range("A1")
    tempRange.Resize(500, 7).Clear
    
    ' Call Python function
    Application.Run "xlwings.RunPython", _
        "import dashboard_calc;" & _
        "dashboard_calc.create_repo_comparison()"
    
    ' Load Python output into VBA
    RunPythonRepoComparison = tempRange.CurrentRegion.Value
    
    ' Clear temporary range (optional)
    tempRange.Resize(500, 7).Clear
End Function


'=============================
' Draw Repo Charts
'=============================
Sub DrawRepoCharts(data As Variant)
    Dim ws As Worksheet
    Set ws = Sheets("RepoComp")
    
    Dim co As ChartObject
    Dim n As Long, i As Long
    Dim ticker As String, signal As String
    Dim cheapCount As Object, expensiveCount As Object
    Set cheapCount = CreateObject("Scripting.Dictionary")
    Set expensiveCount = CreateObject("Scripting.Dictionary")
    
    ' Clear old charts
    For Each co In ws.ChartObjects
        co.Delete
    Next co
    
    ' Find number of rows in the returned data
    n = UBound(data, 1)
    
    ' Count Cheap vs Expensive by ticker
    For i = 2 To n
        ticker = data(i, 3) ' ticker column
        signal = data(i, 7) ' signal column
        If signal = "Cheap" Then
            cheapCount(ticker) = cheapCount(ticker) + 1
        ElseIf signal = "Expensive" Then
            expensiveCount(ticker) = expensiveCount(ticker) + 1
        End If
    Next i
    
    ' Write count summary for chart
    ws.Range("Q1:S1").Value = Array("Ticker", "Cheap", "Expensive")
    i = 2
    Dim key As Variant
    For Each key In cheapCount.Keys
        ws.Cells(i, "Q").Value = key
        ws.Cells(i, "R").Value = cheapCount(key)
        ws.Cells(i, "S").Value = expensiveCount(key)
        i = i + 1
    Next key
    
    ' Create stacked bar chart for Cheap vs Expensive
    Set co = ws.ChartObjects.Add(Left:=ws.Range("Q1").Left, _
                                 Top:=ws.Range("Q1").Top + 150, _
                                 Width:=400, Height:=250)
    With co.Chart
        .ChartType = xlColumnStacked
        .SetSourceData Source:=ws.Range("Q1:S" & i - 1)
        .ChartTitle.Text = "Cheap vs Expensive Quotes per Ticker"
    End With
    
    ' Apply Conditional Formatting for Signal Column
    ws.Range("G2:G" & n).FormatConditions.Delete
    With ws.Range("G2:G" & n).FormatConditions.Add(Type:=xlTextString, String:="Cheap", TextOperator:=xlContains)
        .Interior.Color = RGB(144, 238, 144) ' Light green
    End With
    With ws.Range("G2:G" & n).FormatConditions.Add(Type:=xlTextString, String:="Expensive", TextOperator:=xlContains)
        .Interior.Color = RGB(255, 160, 122) ' Light red
    End With
End Sub


'=============================
' Refresh Repo Dashboard
'=============================
Sub RefreshRepoDashboard()
    Dim result As Variant
    
    ' Get data from Python
    result = RunPythonRepoComparison()
    
    If IsEmpty(result) Then
        MsgBox "No Repo Data Found!", vbExclamation
        Exit Sub
    End If
    
    ' Draw charts
    DrawRepoCharts result
End Sub
