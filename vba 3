Option Explicit

Dim tradeSummary As Collection
Dim dealerMode As String

Sub GenerateDashboard()
    Dim wsData As Worksheet, wsDash As Worksheet
    Dim i As Long, lastRow As Long
    Dim broker As String, ticker As String, maturity As String
    Dim ask, bid, traded, key
    Dim bIndex As Long

    Set wsData = ThisWorkbook.Sheets("bot")

    ' Create or clear Dashboard sheet
    On Error Resume Next
    Set wsDash = ThisWorkbook.Sheets("Dashboard")
    If wsDash Is Nothing Then
        Set wsDash = ThisWorkbook.Sheets.Add(After:=wsData)
        wsDash.Name = "Dashboard"
    Else
        wsDash.Cells.Clear
        For Each key In wsDash.Shapes
            key.Delete
        Next key
    End If
    On Error GoTo 0

    lastRow = wsData.Cells(wsData.Rows.Count, 2).End(xlUp).Row

    ' Setup Title
    With wsDash.Range("B1:G1")
        .Merge
        .Value = "Dealer Activity Overview"
        .Font.Size = 14
        .Font.Bold = True
        .Font.Name = "Segoe UI"
        .Font.Color = RGB(255, 255, 255)
        .Interior.Color = RGB(30, 90, 200)
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .RowHeight = 30
    End With

    ' Labels + Input
    wsDash.Range("B3").Value = "Dealer:"
    With wsDash.Range("B3")
        .Font.Bold = True
        .Font.Size = 11
        .Font.Name = "Segoe UI"
        .HorizontalAlignment = xlRight
    End With

    wsDash.Range("C3").ClearContents
    With wsDash.Range("C3")
        .Interior.Color = RGB(255, 255, 255)
        .Font.Name = "Segoe UI"
        .Font.Size = 11
        .BorderAround xlContinuous, xlThin, xlColorIndexAutomatic
        .ColumnWidth = 15
    End With

    ' Dealer Toggle Button
    dealerMode = "Trades"
    Dim btn As Shape
    Set btn = wsDash.Shapes.AddFormControl(Type:=xlButtonControl, _
        Left:=wsDash.Range("E3").Left, Top:=wsDash.Range("E3").Top, Width:=90, Height:=20)
    With btn
        .Name = "btnToggleDealer"
        .TextFrame.Characters.Text = "Show Quotes"
        .OnAction = "ToggleDealerChart"
        .TextFrame.Characters.Font.Size = 10
    End With

    ' Load Dealer Chart
    Call DrawDealerChart(wsData, wsDash)

    ' Separator Line
    With wsDash.Columns("K")
        .ColumnWidth = 2
        .Interior.Color = RGB(0, 0, 0)
    End With

    ' RIGHT SIDE SETUP â€” Security dropdown
    Set tradeSummary = New Collection
    Dim brokerList As Collection: Set brokerList = New Collection
    Dim quoteCount As Object: Set quoteCount = CreateObject("Scripting.Dictionary")
    Dim tradeCount As Object: Set tradeCount = CreateObject("Scripting.Dictionary")

    ' Build TradeSummary
    For i = 2 To lastRow
        broker = Trim(wsData.Cells(i, 2).Value)
        ticker = Trim(wsData.Cells(i, 4).Value)
        maturity = Trim(wsData.Cells(i, 6).Text)
        ask = wsData.Cells(i, 7).Value
        bid = wsData.Cells(i, 8).Value
        traded = wsData.Cells(i, 9).Value

        If Not brokerList.Contains(broker) Then brokerList.Add broker

        If (Not IsEmpty(ask) Or Not IsEmpty(bid)) And IsEmpty(traded) Then
            quoteCount(broker) = quoteCount(broker) + 1
        End If

        If Not IsEmpty(traded) Then
            tradeCount(broker) = tradeCount(broker) + 1

            Dim entry(1 To 3) As String
            entry(1) = ticker
            entry(2) = maturity
            entry(3) = "1"

            Dim exists As Boolean: exists = False
            Dim j As Long
            For j = 1 To tradeSummary.Count
                If tradeSummary(j)(1) = ticker And tradeSummary(j)(2) = maturity Then
                    tradeSummary(j)(3) = CStr(CLng(tradeSummary(j)(3)) + 1)
                    exists = True
                    Exit For
                End If
            Next j
            If Not exists Then tradeSummary.Add entry
        End If
    Next i

    ' Dropdown
    wsDash.Range("M3").Value = "Select Security"
    With wsDash.Range("M3")
        .Font.Bold = True
        .Font.Size = 10
        .Font.Name = "Segoe UI"
    End With
    wsDash.Range("N3").Value = "All"
    wsDash.Range("N3").Validation.Delete
    With wsDash.Range("N3").Validation
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
             Formula1:="All," & Join(tickersToArray(tradeSummary), ",")
        .IgnoreBlank = True
        .InCellDropdown = True
    End With

    ' Chart Headers
    wsDash.Range("M6:N6").Value = Array("Maturity", "Trades")

    ' Draw Chart
    Call UpdateMaturityChart
End Sub

Sub ToggleDealerChart()
    Dim wsDash As Worksheet: Set wsDash = ThisWorkbook.Sheets("Dashboard")
    dealerMode = IIf(dealerMode = "Trades", "Quotes", "Trades")
    wsDash.Shapes("btnToggleDealer").TextFrame.Characters.Text = _
        IIf(dealerMode = "Trades", "Show Quotes", "Show Trades")
    Call DrawDealerChart(ThisWorkbook.Sheets("bot"), wsDash)
End Sub

Sub DrawDealerChart(wsData As Worksheet, ws As Worksheet)
    Dim dealerFilter As String: dealerFilter = LCase(Trim(ws.Range("C3").Value))
    Dim lastRow As Long: lastRow = wsData.Cells(wsData.Rows.Count, 2).End(xlUp).Row
    Dim dealerDict As Object: Set dealerDict = CreateObject("Scripting.Dictionary")
    Dim i As Long, broker As String, traded, ask, bid

    For i = 2 To lastRow
        broker = Trim(wsData.Cells(i, 2).Value)
        If dealerFilter <> "" And LCase(broker) <> dealerFilter Then GoTo SkipRow
        traded = wsData.Cells(i, 9).Value
        ask = wsData.Cells(i, 7).Value
        bid = wsData.Cells(i, 8).Value

        If Not dealerDict.exists(broker) Then dealerDict(broker) = 0
        If dealerMode = "Trades" Then
            If Not IsEmpty(traded) Then dealerDict(broker) = dealerDict(broker) + 1
        Else
            If (Not IsEmpty(ask) Or Not IsEmpty(bid)) And IsEmpty(traded) Then
                dealerDict(broker) = dealerDict(broker) + 1
            End If
        End If
SkipRow:
    Next i

    ' Output to table
    ws.Range("A6:B100").ClearContents
    ws.Range("A6:B6").Value = Array("Dealer", dealerMode)
    i = 7
    Dim key
    For Each key In dealerDict.Keys
        ws.Cells(i, 1).Value = key
        ws.Cells(i, 2).Value = dealerDict(key)
        i = i + 1
    Next key

    ' Dealer Chart
    Dim chartObj As ChartObject
    On Error Resume Next
    Set chartObj = ws.ChartObjects("DealerChart")
    On Error GoTo 0
    If chartObj Is Nothing Then
        Set chartObj = ws.ChartObjects.Add(Left:=50, Top:=80, Width:=400, Height:=250)
        chartObj.Name = "DealerChart"
    End If
    With chartObj.Chart
        .ChartType = xlColumnClustered
        .SetSourceData Source:=ws.Range("A6:B" & i - 1)
        .HasTitle = True
        .ChartTitle.Text = dealerMode & " per Dealer" & _
            IIf(dealerFilter <> "", " (" & ws.Range("C3").Value & ")", "")
        .Axes(xlCategory).TickLabels.Font.Size = 9
        .Axes(xlValue).TickLabels.Font.Size = 9
    End With
End Sub

Sub UpdateMaturityChart()
    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("Dashboard")
    Dim selected As String: selected = ws.Range("N3").Value
    Dim maturityList As Collection: Set maturityList = New Collection
    Dim i As Long, j As Long
    Dim entry(1 To 2) As Variant
    Dim found As Boolean
    Dim key As Variant

    For i = 1 To tradeSummary.Count
        If selected = "All" Or tradeSummary(i)(1) = selected Then
            found = False
            For j = 1 To maturityList.Count
                If maturityList(j)(1) = tradeSummary(i)(2) Then
                    maturityList(j)(2) = maturityList(j)(2) + CLng(tradeSummary(i)(3))
                    found = True: Exit For
                End If
            Next j
            If Not found Then
                maturityList.Add Array(tradeSummary(i)(2), CLng(tradeSummary(i)(3)))
            End If
        End If
    Next i

    ws.Range("M7:N100").ClearContents
    i = 7
    For Each key In maturityList
        ws.Cells(i, 13).Value = key(0) ' M
        ws.Cells(i, 14).Value = key(1) ' N
        i = i + 1
    Next key

    Dim cObj As ChartObject
    On Error Resume Next
    Set cObj = ws.ChartObjects("MaturityChart")
    On Error GoTo 0
    If cObj Is Nothing Then
        Set cObj = ws.ChartObjects.Add(Left:=550, Top:=80, Width:=400, Height:=250)
        cObj.Name = "MaturityChart"
    End If
    With cObj.Chart
        .ChartType = xlColumnClustered
        .SetSourceData Source:=ws.Range("M6:N" & i - 1)
        .HasTitle = True
        .ChartTitle.Text = "Trades by Maturity (" & selected & ")"
    End With
End Sub

Function tickersToArray(col As Collection) As Variant
    Dim arr() As String
    Dim i As Long
    ReDim arr(0 To col.Count - 1)
    For i = 1 To col.Count
        arr(i - 1) = col(i)(1)
    Next i
    tickersToArray = arr
End Function
