Option Explicit

Dim tradeSummary As Collection
Dim dealerMode As String

Sub GenerateDashboard()
    Dim wsData As Worksheet, wsDash As Worksheet
    Dim i As Long, lastRow As Long
    Dim broker As String, ticker As String, maturity As String
    Dim ask, bid, traded, key
    Dim bIndex As Long

    Set wsData = ThisWorkbook.Sheets("bot")

    ' Create or clear Dashboard sheet
    On Error Resume Next
    Set wsDash = ThisWorkbook.Sheets("Dashboard")
    If wsDash Is Nothing Then
        Set wsDash = ThisWorkbook.Sheets.Add(After:=wsData)
        wsDash.Name = "Dashboard"
    Else
        wsDash.Cells.Clear
        For Each key In wsDash.Shapes
            key.Delete
        Next key
    End If
    On Error GoTo 0

    wsDash.Cells.Font.Name = "Segoe UI"
    wsDash.Cells.Font.Size = 10

    lastRow = wsData.Cells(wsData.Rows.Count, 2).End(xlUp).Row

    ' Init
    Dim brokerList() As String, quoteCount() As Long, tradeCount() As Long
    Dim brokerCount As Long: brokerCount = 0
    Set tradeSummary = New Collection
    dealerMode = "Quotes"

    ' Loop through data
    For i = 2 To lastRow
        broker = Trim(wsData.Cells(i, 2).Value)
        ticker = Trim(wsData.Cells(i, 4).Value)
        maturity = Trim(wsData.Cells(i, 6).Text)
        ask = wsData.Cells(i, 7).Value
        bid = wsData.Cells(i, 8).Value
        traded = wsData.Cells(i, 9).Value

        ' Unique brokers
        bIndex = 0
        For key = 1 To brokerCount
            If brokerList(key) = broker Then bIndex = key: Exit For
        Next key
        If bIndex = 0 Then
            brokerCount = brokerCount + 1
            ReDim Preserve brokerList(1 To brokerCount)
            ReDim Preserve quoteCount(1 To brokerCount)
            ReDim Preserve tradeCount(1 To brokerCount)
            brokerList(brokerCount) = broker
            quoteCount(brokerCount) = 0
            tradeCount(brokerCount) = 0
            bIndex = brokerCount
        End If

        If (Not IsEmpty(ask) Or Not IsEmpty(bid)) And IsEmpty(traded) Then
            quoteCount(bIndex) = quoteCount(bIndex) + 1
        End If
        If Not IsEmpty(traded) Then
            tradeCount(bIndex) = tradeCount(bIndex) + 1
            Dim entry(1 To 3) As String
            entry(1) = ticker: entry(2) = maturity: entry(3) = "1"
            Dim exists As Boolean: exists = False
            For key = 1 To tradeSummary.Count
                If tradeSummary(key)(1) = ticker And tradeSummary(key)(2) = maturity Then
                    tradeSummary(key)(3) = CStr(CLng(tradeSummary(key)(3)) + 1)
                    exists = True: Exit For
                End If
            Next key
            If Not exists Then tradeSummary.Add entry
        End If
    Next i

    ' Title bar
    With wsDash.Range("B1:H1")
        .Merge
        .Value = "Dealer Activity Overview"
        .Interior.Color = RGB(0, 102, 204)
        .Font.Color = RGB(255, 255, 255)
        .Font.Bold = True
        .Font.Size = 14
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .RowHeight = 25
    End With

    ' Dealer filter
    wsDash.Range("B3").Value = "Dealer:"
    wsDash.Range("C3").Value = "All"
    wsDash.Range("C3").Interior.Color = RGB(240, 240, 240)
    wsDash.Range("C3").Borders.LineStyle = xlContinuous

    ' Add dealer toggle button
    Dim btnToggle As Shape
    Set btnToggle = wsDash.Shapes.AddFormControl(xlButtonControl, Left:=wsDash.Range("E3").Left, Top:=wsDash.Range("E3").Top, Width:=80, Height:=20)
    With btnToggle
        .Name = "btnToggleView"
        .TextFrame.Characters.Text = "Show Quotes"
        .OnAction = "ToggleDealerView"
    End With

    ' Output raw broker data (hidden)
    wsDash.Range("B10:D10").Value = Array("Broker", "Quotes", "Trades")
    For i = 1 To brokerCount
        wsDash.Cells(i + 10, 2).Value = brokerList(i)
        wsDash.Cells(i + 10, 3).Value = quoteCount(i)
        wsDash.Cells(i + 10, 4).Value = tradeCount(i)
    Next i
    wsDash.Range("B10:D" & brokerCount + 10).Font.Color = RGB(240, 240, 240)

    ' Dealer Chart
    Dim chart1 As ChartObject
    Set chart1 = wsDash.ChartObjects.Add(Left:=30, Top:=80, Width:=400, Height:=250)
    With chart1.Chart
        .ChartType = xlColumnStacked
        .SetSourceData Source:=wsDash.Range("B10:D" & brokerCount + 10)
        .HasTitle = True
        .ChartTitle.Text = "Quotes vs Trades per Broker"
    End With

    ' Separator
    With wsDash.Columns("J")
        .ColumnWidth = 2
        .Interior.Color = RGB(0, 0, 0)
    End With

    ' Ticker dropdown
    Dim tickers As Collection: Set tickers = New Collection
    For Each key In tradeSummary
        Dim t As String: t = key(1)
        Dim found As Boolean: found = False
        For Each i In tickers
            If i = t Then found = True: Exit For
        Next i
        If Not found Then tickers.Add t
    Next key

    wsDash.Range("L2").Value = "Select Security"
    wsDash.Range("L2").Font.Bold = True
    wsDash.Range("M2").Value = "All"
    wsDash.Range("M2").Interior.Color = RGB(240, 240, 240)
    wsDash.Range("M2").Borders.LineStyle = xlContinuous
    wsDash.Range("M2").Validation.Delete
    With wsDash.Range("M2").Validation
        .Add Type:=xlValidateList, _
             AlertStyle:=xlValidAlertStop, _
             Formula1:="All," & Join(tickersToArray(tickers), ",")
        .IgnoreBlank = True
        .InCellDropdown = True
    End With

    ' Placeholder for maturity data
    wsDash.Range("L5:M5").Value = Array("Maturity", "Trades")
    Call UpdateMaturityChart
End Sub

Sub ToggleDealerView()
    Dim wsDash As Worksheet: Set wsDash = ThisWorkbook.Sheets("Dashboard")
    Dim btn As Shape: Set btn = wsDash.Shapes("btnToggleView")
    If dealerMode = "Quotes" Then
        dealerMode = "Trades"
        btn.TextFrame.Characters.Text = "Show Trades"
        wsDash.ChartObjects(1).Chart.SeriesCollection(1).Values = wsDash.Range("C11:C100")
    Else
        dealerMode = "Quotes"
        btn.TextFrame.Characters.Text = "Show Quotes"
        wsDash.ChartObjects(1).Chart.SeriesCollection(1).Values = wsDash.Range("D11:D100")
    End If
End Sub

Sub UpdateMaturityChart()
    Dim wsDash As Worksheet: Set wsDash = ThisWorkbook.Sheets("Dashboard")
    If tradeSummary Is Nothing Then Exit Sub
    Dim selected As String: selected = wsDash.Range("M2").Value
    Dim maturityList As Collection: Set maturityList = New Collection
    Dim i As Long, j As Long
    Dim entry(1 To 2) As Variant
    Dim found As Boolean
    Dim key As Variant

    For i = 1 To tradeSummary.Count
        If selected = "All" Or tradeSummary(i)(1) = selected Then
            found = False
            For j = 1 To maturityList.Count
                If maturityList(j)(1) = tradeSummary(i)(2) Then
                    maturityList(j)(2) = maturityList(j)(2) + CLng(tradeSummary(i)(3))
                    found = True: Exit For
                End If
            Next j
            If Not found Then
                entry(1) = tradeSummary(i)(2)
                entry(2) = CLng(tradeSummary(i)(3))
                maturityList.Add Array(entry(1), entry(2))
            End If
        End If
    Next i

    ' Output data (invisible)
    wsDash.Range("L6:M100").ClearContents
    i = 6
    For Each key In maturityList
        wsDash.Cells(i, 12).Value = key(0)
        wsDash.Cells(i, 13).Value = key(1)
        i = i + 1
    Next key
    wsDash.Range("L6:M" & i).Font.Color = RGB(240, 240, 240)

    ' Chart
    Dim cObj As ChartObject
    On Error Resume Next
    Set cObj = wsDash.ChartObjects("MaturityChart")
    On Error GoTo 0
    If cObj Is Nothing Then
        Set cObj = wsDash.ChartObjects.Add(Left:=480, Top:=80, Width:=400, Height:=250)
        cObj.Name = "MaturityChart"
    End If
    With cObj.Chart
        .ChartType = xlColumnClustered
        .SetSourceData Source:=wsDash.Range("L5:M" & i - 1)
        .HasTitle = True
        .ChartTitle.Text = "Trades by Maturity (" & selected & ")"
    End With
End Sub

Function tickersToArray(col As Collection) As Variant
    Dim arr() As String, i As Long
    ReDim arr(0 To col.Count - 1)
    For i = 1 To col.Count
        arr(i - 1) = col(i)
    Next i
    tickersToArray = arr
End Function
