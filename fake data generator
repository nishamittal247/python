import pandas as pd
import numpy as np

# Parameters
num_days = 60        # 60 business days (~3 months)
num_dealers = 5      # number of dealers
num_tickers = 3      # number of tickers
rows_per_day = num_dealers * num_tickers

# Date range (weekdays only)
dates = pd.date_range(end=pd.Timestamp.today(), periods=num_days, freq='B')

# Dealers and tickers
brokers = ["BGC", "Elix", "GFI", "Magen", "Nomad"]
tickers = ["AAPL", "MSFT", "GOOG"]

# Create synthetic dataset
data_list = []

for date in dates:
    for broker in brokers:
        for ticker in tickers:
            # Dealer-specific bias
            dealer_bias = np.random.uniform(-0.5, 0.5)

            # Base financing with trend and seasonality
            day_index = (date - dates[0]).days
            trend = 0.02 * day_index            # gradual upward trend
            seasonal = 0.5 * np.sin(2 * np.pi * day_index / 10)  # weekly-like cycle
            implied_financing = np.round(35 + dealer_bias + trend + seasonal + np.random.normal(0, 0.5), 2)

            # Price quotes
            ask = np.round(np.random.uniform(100, 150), 2)
            bid = np.round(ask - np.random.uniform(0.5, 2.0), 2)

            # Trade price (40% trades)
            traded = np.random.choice([0, np.round(np.random.uniform(bid, ask), 2)], p=[0.6, 0.4])
            amount = np.random.randint(100, 1000) if traded != 0 else 0

            dealer_ticker_combo = f"{broker}_{ticker}"
            data_list.append([date, broker, ticker, implied_financing, traded, ask, bid, amount, dealer_ticker_combo])

# Create DataFrame
fake_data = pd.DataFrame(data_list, columns=[
    'date', 'room_name', 'ticker', 'implied_financing_traded',
    'traded', 'ask', 'bid', 'amount', 'dealer_ticker_combo'
])

# Save to Excel
fake_data.to_excel(r"C:\Users\h71125\Dashboard_project\test_fake_data.xlsx",
                   sheet_name='Fake_Data', index=False)

print(fake_data.head())
